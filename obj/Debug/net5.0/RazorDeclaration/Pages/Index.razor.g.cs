// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace AnimalWebGame.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\_Imports.razor"
using AnimalWebGame;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\_Imports.razor"
using AnimalWebGame.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\Pages\Index.razor"
using System.Timers;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 41 "D:\6308\C#\Week1\AnimalWebGame\AnimalWebGame\Pages\Index.razor"
       

    /*DRAFT
    
            Requirement A: 

                a.A countdown timer, once time runs out, the game is over. 
                b.Each successful match earns one point.

            Requirement B:

                Use a Button controls interface to control the difficulty of the game. There are five 
                levels represented by the numbers 5 to 10, which means the number of grids on the 
                side of the square.

            Requirement C:

                Change the mechanics of the game so that only two neighboring animals can pair, 
                and add new mechanics that can exchange the position of two animals that are next 
                to each other.

    */

    //The list of emojis uesd to create matching game
    List<string> animalEmoji = new List<string>()
        {
        "üê∂","üê∂",
        "üê∫","üê∫",
        "ü¶Ñ","ü¶Ñ",
        "ü¶ä","ü¶ä",
        "üê±","üê±",
        "ü¶Å","ü¶Å",
        "üêª","üêª",
        "üê≠","üê≠",
    };
    //Create a list used to store after random order
    List<string> shuffledAnimals = new List<string>();

    int matchesfound = 0;
    Timer timer;
    int tenthsOfSecondsElapsed = 0;
    string timeDisplay;

    //Initialize the game
    protected override void OnInitialized()
    {
        timer = new Timer(100);
        timer.Elapsed += Timer_Tick;
        SetUpGame();
    }

    //Build the game randomly again and initialize the score and timer
    private void SetUpGame()
    {
        Random random = new Random();
        shuffledAnimals = animalEmoji
            .OrderBy(item => random.Next())
            .ToList();
        matchesfound = 0;
        tenthsOfSecondsElapsed = 0;
    }

    string lastAnimalFound = string.Empty;
    string lastDescription = string.Empty;

    //Used to select the animal and test whether it is a match
    private void ButtonClick(string animal, string animalDescription)
    {
        if (lastAnimalFound == string.Empty)
        {
            lastAnimalFound = animal;
            lastDescription = animalDescription;

            timer.Start();
        }
        else if ((lastAnimalFound == animal) && (animalDescription != lastDescription))
        {
            lastAnimalFound = string.Empty;

            shuffledAnimals = shuffledAnimals
                .Select(a => a.Replace(animal, string.Empty))
                .ToList();
            matchesfound++;
            if(matchesfound == 8)
            {
                timer.Stop();
                timeDisplay += " - Play Again?";
                SetUpGame();
            }
        }
        else
        {
            lastAnimalFound = string.Empty;
        }
    }
    //Keep updating the time of the game and converting the result to a string
    private void Timer_Tick(Object source, ElapsedEventArgs e)
    {
        InvokeAsync(() =>
        {
            tenthsOfSecondsElapsed++;
            timeDisplay = (tenthsOfSecondsElapsed / 10f)
                .ToString("0.0s");
            StateHasChanged();
        });
    }
    

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
